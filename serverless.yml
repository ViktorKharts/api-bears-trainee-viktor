service: sls 

frameworkVersion: '2'

custom:
  settings:
    COLUMNS_TABLE: columns
    CARDS_TABLE: cards

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  environment: ${self:custom.settings}
  region: us-east-2
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.COLUMNS_TABLE}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.CARDS_TABLE}"

functions:
  createColumn:
    handler: handler.createColumn
    events:
      - http:
          path: /column
          method: POST

  getColumns:
    handler: handler.getColumns
    events:
      - http:
          path: /columns
          method: GET

  getColumn:
    handler: handler.getColumn
    events:
      - http:
          path: /column/{id}
          method: GET

  updateColumn:
    handler: handler.updateColumn
    events:
      - http:
          path: /column/{id}
          method: PUT

  deleteColumn:
    handler: handler.deleteColumn
    events:
      - http:
          path: /column/{id}
          method: DELETE

  createCard:
    handler: handler.createCard
    events:
      - http:
          path: /card
          method: POST
  
  getCards:
    handler: handler.getCards
    events:
      - http:
          path: /cards
          method: GET
  
  getCard:
    handler: handler.getCard
    events:
      - http:
          path: /card/{id}
          method: GET

  updateCard:
    handler: handler.updateCard
    events:
      - http:
          path: /card/{id}
          method: PUT

  deleteCard:
    handler: handler.deleteCard
    events:
      - http:
          path: /card/{id}
          method: DELETE

resources:
  Resources:
    ColumnsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.COLUMNS_TABLE}
    CardsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttrbuteType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.CARDS_TABLE}

plugins:
  - serverless-offline
  